{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","e","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentURL","toggleEditing","update","autoFocus","src","alt","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","getData","onSnapshot","snapshot","nweetArray","docs","map","marginTop","Profile","refreshUser","displayName","newDisplayName","setNewDisplayName","history","useHistory","updateProfile","signOut","push","Navigation","to","marginRight","faUser","length","AppRouter","isLoggedIn","maxWidth","width","margin","display","justifyContent","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.043c74b9.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\n\r\nexport const dbService = firebase.firestore();\r\n\r\nexport const storageService = firebase.storage();\r\n","import React, { useState } from \"react\";\r\nimport { authService } from \"../fbase\";\r\nimport \"./AuthForm.scss\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (e) => {\r\n        const {\r\n            target: { name, value },\r\n        } = e;\r\n\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n                // create account\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email,\r\n                    password\r\n                );\r\n            } else {\r\n                // log in\r\n                data = await authService.signInWithEmailAndPassword(\r\n                    email,\r\n                    password\r\n                );\r\n            }\r\n            console.log(data);\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    value={password}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    className=\"authInput authSubmit\"\r\n                    value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n                />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"Sign In\" : \"CreateAccount\"}\r\n            </span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faTwitter,\r\n    faGoogle,\r\n    faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport AuthForm from \"../components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"../fbase\";\r\nimport \"./Auth.scss\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (e) => {\r\n        const {\r\n            target: { name },\r\n        } = e;\r\n\r\n        let provider;\r\n\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n\r\n        const data = await authService.signInWithPopup(provider);\r\n        console.log(data);\r\n    };\r\n\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button\r\n                    onClick={onSocialClick}\r\n                    name=\"google\"\r\n                    className=\"authBtn\"\r\n                >\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button\r\n                    onClick={onSocialClick}\r\n                    name=\"github\"\r\n                    className=\"authBtn\"\r\n                >\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;\r\n","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { dbService, storageService } from \"../fbase\";\r\nimport \"./Nweet.scss\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\r\n            \"Are you sure you want to delete this nweet?\"\r\n        );\r\n        if (ok) {\r\n            // delete nweet\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storageService.refFromURL(nweetObj.attachmentURL).delete();\r\n        }\r\n    };\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet,\r\n        });\r\n\r\n        setEditing(false);\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        const {\r\n            target: { value },\r\n        } = e;\r\n\r\n        setNewNweet(value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Edit your nweet\"\r\n                            value={newNweet}\r\n                            required\r\n                            autoFocus\r\n                            onChange={onChange}\r\n                            className=\"formInput\"\r\n                        />\r\n                        <input\r\n                            type=\"submit\"\r\n                            value=\"Update Nweet\"\r\n                            className=\"formBtn\"\r\n                        />\r\n                    </form>\r\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                        Cancel\r\n                    </span>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentURL && (\r\n                        <img\r\n                            src={nweetObj.attachmentURL}\r\n                            alt={nweetObj.attachmentURL}\r\n                        />\r\n                    )}\r\n                    {isOwner && (\r\n                        <div className=\"nweet__actions\">\r\n                            <span onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                            </span>\r\n                            <span onClick={toggleEditing}>\r\n                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                            </span>\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;\r\n","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { dbService, storageService } from \"../fbase\";\r\nimport \"./NweetFactory.scss\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (e) => {\r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n        e.preventDefault();\r\n        let attachmentURL = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj.uid}/${uuidv4()}`);\r\n\r\n            const response = await attachmentRef.putString(\r\n                attachment,\r\n                \"data_url\"\r\n            );\r\n            attachmentURL = await response.ref.getDownloadURL();\r\n        }\r\n\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentURL,\r\n        };\r\n\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        const {\r\n            target: { value },\r\n        } = e;\r\n\r\n        setNweet(value);\r\n    };\r\n\r\n    const onFileChange = (e) => {\r\n        const {\r\n            target: { files },\r\n        } = e;\r\n\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n\r\n    const onClearAttachment = () => {\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"&rarr;\"\r\n                    className=\"factoryInput__arrow\"\r\n                />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n\r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                        alt={attachment}\r\n                    />\r\n                    <div\r\n                        className=\"factoryForm__clear\"\r\n                        onClick={onClearAttachment}\r\n                    >\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { dbService } from \"../fbase\";\r\nimport Nweet from \"../components/Nweet\";\r\nimport NweetFactory from \"../components/NweetFactory\";\r\nimport \"../styles/common.scss\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getData = dbService\r\n            .collection(\"nweets\")\r\n            .onSnapshot((snapshot) => {\r\n                const nweetArray = snapshot.docs.map((doc) => ({\r\n                    id: doc.id,\r\n                    ...doc.data(),\r\n                }));\r\n                setNweets(nweetArray);\r\n            });\r\n\r\n        return () => getData();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet\r\n                        key={nweet.id}\r\n                        nweetObj={nweet}\r\n                        isOwner={nweet.creatorId === userObj.uid}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { authService, dbService } from \"../fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Profile.scss\";\r\n\r\nconst Profile = ({ refreshUser, userObj }) => {\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n    const history = useHistory();\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n\r\n    // const getMyNweets = async () => {\r\n    //     const nweets = await dbService\r\n    //         .collection(\"nweets\")\r\n    //         .where(\"creatorId\", \"==\", userObj.uid)\r\n    //         .orderBy(\"createAt\")\r\n    //         .get();\r\n\r\n    //     console.log(nweets.docs.map((doc) => doc.data()));\r\n    // };\r\n\r\n    // useEffect(() => {\r\n    //     getMyNweets();\r\n    // }, []);\r\n\r\n    const onChange = (e) => {\r\n        const {\r\n            target: { value },\r\n        } = e;\r\n\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    autoFocus\r\n                    placeholder=\"Display Name\"\r\n                    value={newDisplayName}\r\n                    className=\"formInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./Navigation.scss\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    return (\r\n        <nav>\r\n            <ul className=\"ulContainer\">\r\n                <li>\r\n                    <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                        <FontAwesomeIcon\r\n                            icon={faTwitter}\r\n                            color={\"#04AAFF\"}\r\n                            size=\"2x\"\r\n                        />\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/profile\" className=\"profileLink\">\r\n                        <FontAwesomeIcon\r\n                            icon={faUser}\r\n                            color={\"#04AAFF\"}\r\n                            size=\"2x\"\r\n                        />\r\n                        <span style={{ marginTop: 10 }}>\r\n                            {\" \"}\r\n                            {userObj?.displayName?.length\r\n                                ? `${userObj.displayName}'s Profile`\r\n                                : \"Profile\"}\r\n                        </span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Profile from \"../routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                            maxWidth: 890,\r\n                            width: \"100%\",\r\n                            margin: \"0 auto\",\r\n                            marginTop: 80,\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile\r\n                                userObj={userObj}\r\n                                refreshUser={refreshUser}\r\n                            />\r\n                        </Route>\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Auth />\r\n                        </Route>\r\n                    </>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"../components/Router\";\nimport { authService } from \"../fbase\";\n\nfunction App() {\n    const [init, setInit] = useState(false);\n    const [userObj, setUserObj] = useState(null);\n\n    useEffect(() => {\n        authService.onAuthStateChanged((user) => {\n            if (user) {\n                setUserObj({\n                    displayName: user.displayName,\n                    uid: user.uid,\n                    updateProfile: (args) => user.updateProfile(args),\n                });\n            } else {\n                setUserObj(null);\n            }\n            setInit(true);\n        });\n    }, []);\n\n    const refreshUser = () => {\n        const user = authService.currentUser;\n        setUserObj({\n            displayName: user.displayName,\n            uid: user.uid,\n            updateProfile: (args) => user.updateProfile(args),\n        });\n    };\n\n    return (\n        <>\n            {init ? (\n                <AppRouter\n                    refreshUser={refreshUser}\n                    isLoggedIn={Boolean(userObj)}\n                    userObj={userObj}\n                />\n            ) : (\n                \"Initializing...\"\n            )}\n            {/* <footer>&copy; Nwitter {new Date().getFullYear()}</footer> */}\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport firebase from \"firebase/app\";\nimport \"./index.scss\";\n\nconsole.log(firebase);\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}